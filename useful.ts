// развернуть mongo db для users
// docker compose --file ./apps/user-service/docker-compose.dev.yml --project-name "typoteka-user" --env-file ./apps/user-service/.env up -d

// развернуть postgres для posts
// docker compose --file ./apps/blog-service/docker-compose.dev.yml --env-file ./apps/blog-service/.env --project-name typoteka-blog" up -d

// Создать ресурс nest
// nest generate resource <resource-name>

// Создать библиотеку nx
// nx generate @nx/node:library libs/<lib-name>

// TODO
// ПОСТЫ
// +++++++ 0)Добавить к посту все свойства в DTO
// +++++++1) Создание тегов вместе c постом, если есть уже такой тег то ошибки не будет и присвоится уже созданные
// +++++++Если нет, то создать в бд новый тег
// +++++++При создании также сохранять тип поста
// +++++++2) Получение постов по тегам () по умолчанию только статуы published
// +++++++получение постов по id пользователя там уже без разницы какой статус если ты сам запрашиваешь
// +++++++или только статуы published если запрашивает другой пользователь
// +++++++Сортировка по дате, лайкам и комментам

// +++++++3) Лайканье постов - тут нужно добавить свойства likesCount? или какие ещё есть варианты
// +++++++Добавление и удаление лайка
// +++++++4) комментирование постов - тут нужно добавить свойства commentsCount? или какие ещё есть варианты
// +++++++Добавление и удаление комментария
// +++++++5) Репост, это тупо как создание нового своего поста, но будет сохраняться original post-id и original author id
// +++++++Сделать virtual на isRepost

// AUTH
// +++++++1) При логине ходим в user-service проверяем пользователя (через api gateway или http запрос хз - это потом)
// ------- Не буду делать2) Выдаём также рефреш токен и чтоб если протух основной то сработало через рефреш
// 3) Сделать глобальный guard на то что человек редактирует, удаляет только свои посты и комменты в глоб библиотеку
// 4) Перенести guard на то что человек авторизован в глобальную библиотеку

// USER
// +++++++1) Смена пароля
// +++++++2) Деталка

// 1) Сделать swagger

// -------это хз, неавторизованные могут подписываться на других пользователей - это формирует ленту пользователя
// -------и отписываться тоже

// NOTIFY
// уведомления о новых публикациях всем зарегистрированным
// Письмо с информацией об обновлениях содержит список новых публикаций с момента последней рассылки.
// Запуск рассылки уведомлений осуществляется по запросу пользователя
